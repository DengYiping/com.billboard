{"version":3,"sources":["component/navibar.js","reducer/loginlogoutreducer.js","component/footer.js","component/login_content_page.js","component/home_content_page.js","component/onlinead_content_page.js","component/establishment_content_page.js","App.js","serviceWorker.js","index.js"],"names":["NaviBar","location","this","props","react_default","a","createElement","layout","Header","className","style","float","height","margin","isLogedIn","es_button","type","icon","width","onClick","dispatchLogout","Link","to","menu","theme","mode","defaultSelectedKeys","selectedKeys","pathname","lineHeight","Item","key","NavLink","React","Component","connected","connect","state","login","dispatch","dispatchLogin","withRouter","Footer","textAlign","PureComponent","LoginContentPage","handleSubmit","e","preventDefault","_this","form","validateFields","err","values","console","log","Redirect","getFieldDecorator","row","align","justify","minHeight","col","es_form","onSubmit","rules","required","message","input","prefix","color","placeholder","valuePropName","initialValue","es_checkbox","htmlType","WrappedNormalLoginForm","Form","create","HomeContentPage","Fragment","span","size","date_picker","RangePicker","padding","OnlineAdContentPage","EstablishmentContentPage","combinedReducers","combineReducers","arguments","length","undefined","store","createStore","App","es","component_navibar","Content","overflowY","Switch","Route","exact","path","component","footer","Boolean","window","hostname","match","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3bee3a0.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu, Layout, Button } from 'antd';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport './navibar.css';\nimport { connect } from 'react-redux';\nimport { LOG_IN, LOG_OUT } from '../reducer/loginlogoutreducer';\nimport {Link} from 'react-router-dom';\n\nclass NaviBar extends React.Component {\n    render() {\n        const { location } = this.props;\n        return (\n            <Layout.Header>\n                <div className='logo'></div>\n                <div className='login-logout' style={{ float: 'right', height: '31px', margin: 0 }}>\n                    {this.props.isLogedIn ?\n                        <Button type='primary' icon='logout' style={{width: '100px'}} onClick={this.props.dispatchLogout}>Log out</Button> :\n                        <Link to='/login'><Button type='primary' icon='login' style={{width: '100px'}}>Log in</Button></Link>}\n                </div>\n                <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    defaultSelectedKeys={['/']}\n                    selectedKeys={[location.pathname]}\n                    style={{ lineHeight: '64px' }}\n                >\n                    <Menu.Item key='/'>\n                        <NavLink to='/'>Home</NavLink>\n                    </Menu.Item>\n                    <Menu.Item key='/onlineads'>\n                        <NavLink to='/onlineads'>Online Ads</NavLink>\n                    </Menu.Item>\n                    <Menu.Item key='/establishmentads'>\n                        <NavLink to='/establishmentads'>Establishment Ads</NavLink>\n                    </Menu.Item>\n                </Menu>\n            </Layout.Header>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { isLogedIn: state.login.isLogedIn };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dispatchLogin: () => dispatch({ type: LOG_IN }),\n        dispatchLogout: () => dispatch({ type: LOG_OUT })\n    };\n}\n\nconst connected = connect(mapStateToProps, mapDispatchToProps)(NaviBar);\nexport default withRouter(connected);\n","export const LOG_IN = 'LOGED_IN';\nexport const LOG_OUT = 'LOGED_OUT';\n\nexport default function(state = {isLogedIn: false}, action){\n    const {type} = action;\n\n    // action for login\n    switch(type){\n        case LOG_IN:\n            return {isLogedIn: true};\n        case LOG_OUT:\n            return {isLogedIn: false}\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport { Layout } from 'antd';\n\nclass Footer extends React.PureComponent {\n    render() {\n        return (\n            <Layout.Footer style={{textAlign:'center'}}>\n                <span>Billboard Inc 2018. All rights reserved.</span>\n            </Layout.Footer>\n        );\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport { Checkbox, Icon, Row, Col, Form, Button, Input } from \"antd\";\nimport './login_content_page.css';\nimport { LOG_IN, LOG_OUT } from '../reducer/loginlogoutreducer';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\nclass LoginContentPage extends React.Component {\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                // TODO\n                console.log('Received values of form: ', values);\n                this.props.dispatchLogin();\n\n            }\n        });\n    }\n\n    render() {\n        if(this.props.isLogedIn){\n            return <Redirect to='/' />;\n        }\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div className=\"login-page-content\">\n                <Row type='flex' align='middle' justify='center' style={{ minHeight: '70vh' }}>\n                    <Col className='login-background' style={{ minHeight: '200px' }}>\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                            <Form.Item>\n                                {getFieldDecorator('userName', {\n                                    rules: [{ required: true, message: 'Please input your username!' }],\n                                })(\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('password', {\n                                    rules: [{ required: true, message: 'Please input your Password!' }],\n                                })(\n                                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('remember', {\n                                    valuePropName: 'checked',\n                                    initialValue: true,\n                                })(\n                                    <Checkbox>Remember me</Checkbox>\n                                )}\n                                <Link className=\"login-form-forgot\" to=\"/\">Forgot password</Link>\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                    Log in\n                            </Button>\n                                Or <Link to=\"/\">register now!</Link>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\nconst WrappedNormalLoginForm = Form.create()(LoginContentPage);\n\nconst mapStateToProps = (state) => {\n    return { isLogedIn: state.login.isLogedIn };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dispatchLogin: () => dispatch({ type: LOG_IN }),\n        dispatchLogout: () => dispatch({ type: LOG_OUT })\n    };\n}\nconst connected = connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);\nexport default connected;","import React from 'react';\nimport { Row, Col, Input, Button, DatePicker, Icon} from 'antd';\nimport './home_content_page.less';\nclass HomeContentPage extends React.PureComponent {\n    render() {\n        return (\n            <React.Fragment>\n                <Row className='greeting-search-section'>\n                    <Row className='greeting-row'>\n                        Welcome to <span className='greeting-highlight-part'>Billboard</span>\n                    </Row>\n                    <Row className='search-row'>\n                        <Col span={2} />\n                        <Col span={11} className='search-input-col'>\n                            <Input size='large' placeholder='Place of the advertisement'/>\n                        </Col>\n                        <Col span={8}>\n                            <DatePicker.RangePicker size='large' placeholder={['Start date', 'End date']}/>\n                        </Col>\n                        <Col span={3} className='search-extra-col'>\n                            <Button className='search-btn' type='primary' size='large'>\n                                <span>Search</span>\n                            </Button> \n                        </Col>\n                    </Row>\n                </Row>\n                <Row className='introduction-section'>\n                <Row style={{padding: '20px', margin: '20px 0 0 0'}}>\n                    <Col span={8}>\n                        <Row>\n                            <Col span={4}>\n                            <Icon type=\"project\" theme=\"filled\" className='introduction-icon'/>\n                            </Col>\n                            <Col span={20} className='introduction-text'>\n                            <b>Great Features</b><br/>\n                            Using advanced GPS technology, and databases. We are able to recommend the best places for you to place advertisments.\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col span={8}>\n                        <Row>\n                            <Col span={4}>\n                            <Icon type=\"setting\" theme=\"filled\" className='introduction-icon'/>\n                            </Col>\n                            <Col span={20} className='introduction-text'>\n                            <b>Completely Customizable</b><br/>\n                            Choose the shape and font of your advertisment; have the ability to customize your print and be your own graphic designer.\n                            </Col>\n                        </Row>\n\n                    </Col>\n                    <Col span={8}>\n                        <Row>\n                            <Col span={4}>\n                            <Icon type=\"interation\" theme=\"filled\" className='introduction-icon'/>\n                            </Col>\n                            <Col span={20} className='introduction-text'>\n                            <b>100% Responsive Layout</b><br/>\n                            View and track all your billbords on an interactive map; view and track empty billboards too.\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row style={{padding: '20px'}}>\n                   <Col span={8}>\n                        <Row>\n                            <Col span={4}>\n                            <Icon type=\"smile\" theme=\"filled\" className='introduction-icon'/>\n                            </Col>\n                            <Col span={20} className='introduction-text'>\n                            <b>User Friendly</b><br/>\n                            No need to be a pro to use our site. Our user friendly interface empowers small buisnesses to take charge of their marketing.\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col span={8}>\n                        <Row>\n                            <Col span={4}>\n                            <Icon type=\"layout\" theme=\"filled\" className='introduction-icon'/>\n                            </Col>\n                            <Col span={20} className='introduction-text'>\n                            <b>Awesome Layout</b><br/>\n                            Choose 1 from our 100s of available templates to make your advertisment look professional; if you use our printing service; the template is free.\n                            </Col>\n                        </Row>\n                    </Col>\n                     <Col span={8}>\n                        <Row>\n                            <Col span={4}>\n                            <Icon type=\"rocket\" theme=\"filled\" className='introduction-icon'/>\n                            </Col>\n                            <Col span={20} className='introduction-text'>\n                            <b>High Quality</b><br/>\n                            High Quality printing service available. We can print big sized advertisments that can suit even the largest billboard.\n                            </Col>\n                        </Row>\n                    </Col>\n \n                </Row>\n\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default HomeContentPage;","import React from 'react';\n\nclass OnlineAdContentPage extends React.PureComponent {\n    render() {\n        return (<div>Online Ads Page</div>);\n    }\n}\n\nexport default OnlineAdContentPage;","import React from 'react';\n\nclass EstablishmentContentPage extends React.PureComponent {\n    render(){\n        return (<div>Establishment Ad Page</div>);\n    }\n}\n\nexport default EstablishmentContentPage;","import React, { Component } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.less';\nimport NaviBar from './component/navibar';\nimport { Layout } from 'antd';\nimport { createStore, combineReducers } from 'redux';\nimport login from './reducer/loginlogoutreducer';\nimport { Provider } from 'react-redux';\nimport Footer from './component/footer';\nimport { Switch, Route } from 'react-router-dom';\nimport LoginContentPage from './component/login_content_page';\nimport HomeContentPage from './component/home_content_page';\nimport OnlineAdContentPage from './component/onlinead_content_page';\nimport EstablishmentContentPage from './component/establishment_content_page';\n\nconst combinedReducers = combineReducers({ login });\nconst store = createStore(combinedReducers);\n\nclass App extends Component {\n  render() {\n    return (\n      // load the store\n      <Provider store={store}>\n        <div className=\"App\">\n          <Layout style={{height:'100vh'}}>\n            <NaviBar />\n            <Layout.Content style={{height: '100%', overflowY:'scroll'}}>\n              <Switch>\n                {/* different possible pages */}\n                <Route exact path='/' component={HomeContentPage} />\n                <Route exact path='/onlineads' component={OnlineAdContentPage} />\n                <Route exact path='/establishmentads' component={EstablishmentContentPage} />\n                <Route exact path='/login' component={LoginContentPage} />\n              </Switch>\n            </Layout.Content>\n            <Footer />\n          </Layout>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    (<HashRouter>\n        <App />\n    </HashRouter>), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}